buildscript {
    repositories{
        mavenCentral()
    }
    dependencies {
        classpath files(mkdir('build/classes/main'))
        classpath files(mkdir('build/resources/main'))
        classpath 'net.sf.opencsv:opencsv:2.3'
        classpath 'com.googlecode.json-simple:json-simple:1.1.1'
        classpath 'org.robotframework:swinglibrary:1.9.6'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE'
        classpath 'org.robotframework:javalib-core:1.2.1'
    }
}
plugins {
  id 'org.roboscratch.robot' version '0.1.1'
}
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'CSV JSON', 
                   'Implementation-Version': version, 
                   'Main-Class': 'edu.jsu.mcis.Main'
    }
}

task uberjar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile 'org.robotframework:swinglibrary:1.9.6'
	compile 'org.robotframework:javalib-core:1.2.1'
	compile 'org.netbeans:jemmy:2.2.7.5'
    compile 'net.sf.opencsv:opencsv:2.3'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.springframework.boot:spring-boot-starter-web'
    testCompile 'junit:junit:4.+'
    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.googlecode.json-simple:json-simple:1.1.1'
}

jacocoTestReport {
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}


runrobot.debugfile = 'debug.log'
runrobot.dependsOn build
