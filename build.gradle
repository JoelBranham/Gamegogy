buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.opencsv:opencsv:2.3'
        classpath 'com.googlecode.json-simple:json-simple:1.1.1'
        classpath 'org.robotframework:swinglibrary:1.9.6'
        classpath files(mkdir('client/build/classes/main'))
        classpath files(mkdir('client/build/resources/main'))
        classpath files(mkdir('service/build/classes/main'))
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE'
    }
}

plugins {
  id 'org.roboscratch.robot' version '0.1.1' apply false
}

subprojects { 
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.roboscratch.robot'
	apply plugin: 'org.springframework.boot'
    
    task uberjar(type: Jar) {
        manifest.from jar.manifest
        classifier = 'all'
        from {
            configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
        } {
            exclude "META-INF/*.SF"
            exclude "META-INF/*.DSA"
            exclude "META-INF/*.RSA"
        }
        with jar
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile 'net.sf.opencsv:opencsv:2.3'
        compile 'com.googlecode.json-simple:json-simple:1.1.1'
        testCompile 'junit:junit:4.+'
        testCompile 'com.googlecode.json-simple:json-simple:1.1.1'
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

    jacocoTestReport {
        group = 'Reporting'
        description = 'Generate Jacoco coverage reports after running tests.'
        additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    }

    runrobot.debugfile = 'debug.log'
    runrobot.dependsOn build
}